
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВосстановитьНастройки_VanessaAutomation();
	
	Элементы.ОписаниеПрочихТестов.Заголовок = 
		"1. Проверка метаданных критериев отбора
		|2. Проверка прочих метаданных
		|3. Проверка отчетов";
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОтобразитьТекстПредупрежденияОТестированииВРабочейБазе();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;

	СохранитьНастройки();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	Настройки = Новый Структура();
	Настройки.Вставить("СтрокаСоединенияСБазойТестирования",СтрокаСоединенияСБазойТестирования);
	Настройки.Вставить("ТестированиеВРабочейБазе", ТестированиеВРабочейБазе);
	Настройки.Вставить("ПапкаСценариев", ПапкаСценариев);
	
	ХранилищеОбщихНастроек.Сохранить(ЭтаФорма.ИмяФормы, , Настройки);
	
КонецПроцедуры

#Область Сценарии_VanessaAutomation

&НаСервере
Процедура ВосстановитьНастройки_VanessaAutomation()
	
	СтруктураНастроек = ХранилищеОбщихНастроек.Загрузить(ЭтаФорма.ИмяФормы); 
	
	Если ТипЗнч(СтруктураНастроек) = Тип("Структура") Тогда
		СтруктураНастроек.Свойство("СтрокаСоединенияСБазойТестирования", СтрокаСоединенияСБазойТестирования);
		СтруктураНастроек.Свойство("ТестированиеВРабочейБазе", ТестированиеВРабочейБазе);
		СтруктураНастроек.Свойство("ПапкаСценариев", ПапкаСценариев);
	КонецЕсли;
	
	Если ПустаяСтрока(СтрокаСоединенияСБазойТестирования) Тогда
		СтрокаСоединенияСБазойТестирования = СтрокаСоединенияСБазойТестированияПоУмолчанию();
		ТестированиеВРабочейБазе = ЭтоСтрокаСоединенияСРабочейБазой();
	КонецЕсли;
	
	Если ПустаяСтрока(ПапкаСценариев) Тогда
		ПапкаСценариев = "C:\Users\bexpert\Documents\__Тестирование конфигурации\__Сценарии тестирования";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЭтоСтрокаСоединенияСРабочейБазой()
	
	Возврат мт_ПрочиеФункцииСервер.ЭтоСтрокаСоединенияСРабочейБазой(СтрокаСоединенияСБазойТестирования);
	
КонецФункции

&НаСервере
Функция СтрокаСоединенияСБазойТестированияПоУмолчанию()
	
	Возврат "Srvr=""SQL-MET"";Ref=""ERP_TEST5"";";
	
КонецФункции

&НаСервере
Функция ТекстыФичТестирования()
	
	возврат мт_ТестированиеКонфигурации_Служебный.ТекстыФичТестирования(СтрокаСоединенияСБазойТестирования, ТестированиеВРабочейБазе);
	
КонецФункции

&НаКлиенте
Процедура ЗаписатьТекстыФичТестирования(ТекстыФич, ШаблонИмениФайла)
	
#Если ТонкийКлиент Тогда 	
	
	Для Каждого Фича Из ТекстыФич Цикл
		
		ИмяФичи = Фича.Ключ;
		
		ИмяФайла = СтрШаблон(ШаблонИмениФайла, ИмяФичи);
		ТекстФичи = Фича.Значение;
		ТекстФичи.Записать(ИмяФайла, КодировкаТекста.UTF8);
		
	КонецЦикла;
	
#ИначеЕсли ВебКлиент Тогда
	
	ВызватьИсключение "Работает только в тонком клиенте";
		
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьСценарииТестирования(Команда)
	
	УдалитьФайлы(ПапкаСценариев, "Тестирование *.feature");
	
	ТекстыФичТестирования = ТекстыФичТестирования();
	ШаблонИмениФайла = ПапкаСценариев+"\Тестирование %1.feature";
	ЗаписатьТекстыФичТестирования(ТекстыФичТестирования, ШаблонИмениФайла);
	
	мт_ТестированиеКонфигурации_Клиент.ПоказатьСообщение_ОК("Созданы сценарии тестирования.
		|Запустите базу - менеджер тестирования, откройте обработку Vanessa Automation и выполните тесты.");
	
КонецПроцедуры

&НаКлиенте
Процедура ПапкаСценариевНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПапкаСценариевНачалоВыбора_Продолжение", ЭтотОбъект);
	ДиалогВыбораКаталога.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПапкаСценариевНачалоВыбора_Продолжение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		возврат;
	КонецЕсли;
	
	ПапкаСценариев = ВыбранныеФайлы[0];
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКБазеДанныхПриИзменении(Элемент)
	
	ТестированиеВРабочейБазе = ЭтоСтрокаСоединенияСРабочейБазой();
	ОтобразитьТекстПредупрежденияОТестированииВРабочейБазе();
	
КонецПроцедуры

&НаКлиенте
Процедура ТестированиеВРабочейБазеПриИзменении(Элемент)

	ОтобразитьТекстПредупрежденияОТестированииВРабочейБазе();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьТекстПредупрежденияОТестированииВРабочейБазе()
	
	Если ТестированиеВРабочейБазе Тогда
		ТекстПредупреждения = "При тестированиии в рабочей базе будут отключены некоторые тесты, которые изменяют сохраняемые данные";
	Иначе
		ТекстПредупреждения = "";
	КонецЕсли;
	
	Элементы.ТекстПредупрежденияОТестированииВРабочейБазе.Заголовок = ТекстПредупреждения;
	
КонецПроцедуры

#КонецОбласти

#Область РассылкиНаЭлектроннуюПочту

&НаСервере
Функция КомандаТестированиеРассылокНаСервере()
	
	МенеджерыДокументов = Новый Массив;
	МенеджерыДокументов.Добавить(Документы.мт_АктОБраке);
	МенеджерыДокументов.Добавить(Документы.мт_ВходнойКонтроль);
	МенеджерыДокументов.Добавить(Документы.мт_ЗаявкаНаКонтрольОТК);
	МенеджерыДокументов.Добавить(Документы.мт_ПроверкаОТК);
	МенеджерыДокументов.Добавить(Документы.мт_СогласованиеОтклонений);
	
	РежимТестирования = Истина;
	Для Каждого Менеджер Из МенеджерыДокументов Цикл
		
		НавигационнаяСсылка = Менеджер.НавигационнаяСсылкаТестированияРассылки();
		Если Не ЗначениеЗаполнено(НавигационнаяСсылка) Тогда
			ВызватьИсключение "Не указана ссылка для тестирования в документе "+Строка(Менеджер);
		КонецЕсли;
		
		Попытка
			СсылкаДокумента = мт_ПрочиеФункцииСервер.СсылкаИзНавигационнойСсылки(НавигационнаяСсылка);
		Исключение
			ВызватьИсключение "Не смог разобрать навигационную ссылку в документе "+Строка(Менеджер);
		КонецПопытки;
		
		Если Не ЗначениеЗаполнено(СсылкаДокумента) Тогда
			ВызватьИсключение "Не указана ссылка для тестирования в документе "+Строка(Менеджер);
		КонецЕсли;
		
		Менеджер.РазослатьПисьмаПоЭлектроннойПочте(СсылкаДокумента, РежимТестирования);
		
	КонецЦикла;
	
	Возврат МенеджерыДокументов.Количество();
	
КонецФункции

&НаКлиенте
Процедура КомандаТестированиеРассылок(Команда)
	
	КоличествоПисем = КомандаТестированиеРассылокНаСервере();
	
	мт_ТестированиеКонфигурации_Клиент.ПоказатьСообщение_ОК(СтрШаблон("Письма высланы. Проверьте свою электронную почту, указанную в настроках пользователя
		|Должно прийти %1 писем", КоличествоПисем));
	
КонецПроцедуры

#КонецОбласти

#Область РольАудитора

&НаСервере
Процедура КомандаПроверитьРольАудитораНаСервере(Отказ)
	
	мт_ТестированиеКонфигурации_Сервер.ПроверитьРольАудитора(Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПроверитьРольАудитора(Команда)
	
	Отказ = Ложь;
	КомандаПроверитьРольАудитораНаСервере(Отказ);
	
	Если Отказ Тогда
		ПоказатьПредупреждение(, "Тест не пройден");
	Иначе
		мт_ТестированиеКонфигурации_Клиент.ПоказатьСообщение_ОК("Успешно.
			|Дополнительно нужно зайти в 1С под пользователелем Аудитор и визуально проверить видимость всех необходимых пунктов меню
			|(сравнивайте с видимостью их под полными правами)");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СверкаОстатковРегистров

&НаКлиенте
Процедура СверкаОстатковРегистров(Команда)
	
	ОбщийНесоответствиеОстатков = ПолучитьНесоответствияОстатков();
	Если ОбщийНесоответствиеОстатков.ЕстьНесоответствия Тогда
		Для Каждого НесоответствиеОстатков Из ОбщийНесоответствиеОстатков.мНесоответствия Цикл
			НесоответствиеОстатков.ТабличныйДокумент.Показать(
				СтрШаблон("Несоответствия остатков: %1 на %2", 
				НесоответствиеОстатков.ИмяРегистра, Формат(НесоответствиеОстатков.ДатаОстатков, "ДФ=dd.MM.yyyy")));
		КонецЦикла;
		ПоказатьПредупреждение(, "Имеются расхождения");
	Иначе
		мт_ТестированиеКонфигурации_Клиент.ПоказатьСообщение_ОК("Остатки соответствуют эталонным");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНесоответствияОстатков()
	
	ОбщийНесоответствиеОстатков = Новый Структура();
	ОбщийНесоответствиеОстатков.Вставить("ЕстьНесоответствия", Ложь);
	ОбщийНесоответствиеОстатков.Вставить("мНесоответствия", Новый Массив);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	мт_Тестирование_ЭталонныеОстаткиРегистров.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.мт_Тестирование_ЭталонныеОстаткиРегистров КАК мт_Тестирование_ЭталонныеОстаткиРегистров
	               |ГДЕ
	               |	мт_Тестирование_ЭталонныеОстаткиРегистров.ПометкаУдаления = ЛОЖЬ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	мт_Тестирование_ЭталонныеОстаткиРегистров.Наименование,
	               |	мт_Тестирование_ЭталонныеОстаткиРегистров.ДатаОстатков";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НесоответствиеОстатков = Справочники.мт_Тестирование_ЭталонныеОстаткиРегистров.НесоответствиеОстатков(Выборка.Ссылка);
		Если НесоответствиеОстатков.ЕстьНесоответствия Тогда
			ОбщийНесоответствиеОстатков.ЕстьНесоответствия = Истина;
			ОбщийНесоответствиеОстатков.мНесоответствия.Добавить(НесоответствиеОстатков);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОбщийНесоответствиеОстатков;
	
КонецФункции	

&НаКлиенте
Процедура СверкаОстатковРегистров_СохраненныеДанные(Команда)
	
	ОткрытьФорму("Справочник.мт_Тестирование_ЭталонныеОстаткиРегистров.ФормаСписка");
	
КонецПроцедуры

#КонецОбласти

#Область ПрочиеТесты

&НаСервере
Процедура КомандаПрочиеТестыНаСервере(Отказ)
	
	мт_ТестированиеКонфигурации_Сервер.ПроверитьКритерииОтбора(Отказ);
	мт_ТестированиеКонфигурации_Сервер.ПроверитьПрочиеМетаданные(Отказ);
	мт_ТестированиеКонфигурации_Сервер.ПроверитьОтчеты(Отказ);
	мт_ТестированиеКонфигурации_Сервер.ПрочиеТесты(Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПрочиеТесты(Команда)
	
	Отказ = Ложь;
	КомандаПрочиеТестыНаСервере(Отказ);
	
	Если Отказ Тогда
		ПоказатьПредупреждение(, "Тест не пройден");
	Иначе
		мт_ТестированиеКонфигурации_Клиент.ПоказатьСообщение_ОК("Успешно");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ГенерацияТекстовМодулей

&НаКлиенте
Процедура ГенерацияТекстаРаздела_ПроверкаДвижений(Команда)
	
	ТекстМодуля = мт_ТестированиеКонфигурации_Служебный.СгенерироватьТекстОбласти_ПроверкаДвижений();
	ТекстМодуля.Показать();
	
КонецПроцедуры

&НаКлиенте
Процедура ГенерацияТекстаРаздела_ПроверкаКритериевОтбора(Команда)
	
	ТекстМодуля = мт_ТестированиеКонфигурации_Служебный.СгенерироватьТекстОбласти_ПроверкаКритериевОтбора();
	ТекстМодуля.Показать();
	
КонецПроцедуры

&НаКлиенте
Процедура ГенерацияТекстаРаздела_ОпределяемыеТипы(Команда)
	
	ТекстМодуля = мт_ТестированиеКонфигурации_Служебный.СгенерироватьТекстОбласти_ОпределяемыеТипы();
	ТекстМодуля.Показать();
	
КонецПроцедуры

#КонецОбласти
